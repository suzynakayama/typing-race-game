{"version":3,"sources":["snippets.ts","App.tsx","index.tsx"],"names":["PHRASES","App","useState","userText","phrase","wrongText","victory","startTime","endTime","game","setGame","inputRef","useRef","color","className","onClick","style","fontWeight","type","onChange","evt","inputValue","currentTarget","value","substring","length","Date","getTime","onPaste","preventDefault","onKeyDown","keyCode","placeholder","ref","map","idx","key","current","focus","setFocus","handleClick","ReactDOM","render","document","getElementById"],"mappings":"yMAAaA,EAAU,CACtB,0DACA,qDACA,+DACA,gDACA,uCACA,gCACA,oDACA,6CACA,gFCJYC,G,MAAM,WAAO,IAAD,EACAC,mBAAe,CACtCC,SAAU,GACVC,OAAQ,GACRC,WAAW,EACXC,SAAS,EACTC,UAAW,KACXC,QAAS,OAPc,mBACjBC,EADiB,KACXC,EADW,KAUlBC,EAAWC,iBAAyB,MAiEtCC,EAAQJ,EAAKJ,UAAY,MAAQ,QAKrC,OAJII,EAAKH,UACRO,EAAQ,SAIR,8BACC,yBAAKC,UAAU,QACd,gDACA,4BAAQC,QApBK,WACfL,EAAQ,CACPP,SAAU,GACVC,OAAQ,GACRC,WAAW,EACXC,SAAS,EACTC,UAAW,KACXC,QAAS,QAakBM,UAAU,WAApC,WAGA,4CACCL,EAAKH,QACL,wBAAIU,MAAO,CAAEH,MAAO,MAAOI,WAAY,SAAvC,wBACuBR,EAAKD,QAD5B,OAIA,4BAAKC,EAAKL,QAEX,2BACCc,KAAK,OACLC,SAxEiB,SAACC,GACrB,IAAIC,EAAaD,EAAIE,cAAcC,MACnCb,EAAQ,eACJD,EADG,CAENN,SAAUkB,KAGPA,IAAeZ,EAAKL,OAAOoB,UAAU,EAAGH,EAAWI,QACtDf,EAAQ,eACJD,EADG,CAENJ,WAAW,EACXF,SAAUkB,KAGXX,EAAQ,eACJD,EADG,CAENJ,WAAW,EACXF,SAAUkB,KAIRA,IAAeZ,EAAKL,QACvBM,EAAQ,eACJD,EADG,CAENJ,WAAW,EACXC,SAAS,EACTE,SAAS,IAAIkB,MAAOC,UAAYlB,EAAKF,cA+CpCqB,QA1CY,SAACR,GAChBA,EAAIS,kBA0CDC,UAvCY,SAACV,GACI,KAAhBA,EAAIW,SAAgBX,EAAIS,kBAuCzBN,MAAOd,EAAKN,SACZ6B,YAAY,aACZhB,MAAO,CAAEH,MAAOA,GAChBoB,IAAKtB,IAEN,yBAAKG,UAAU,QACbd,EAAQkC,KAAI,SAAC9B,EAAQ+B,GAAT,OACZ,4BAAQC,IAAKD,EAAKpB,QAAS,kBA3FZ,SAACoB,IAJJ,SAACxB,GACVA,EAAS0B,SAAW1B,EAAS0B,QAAQC,QAI5CC,CAAS5B,GACTD,EAAQ,eACJD,EADG,CAENL,OAAQJ,EAAQmC,GAChB5B,WAAW,IAAImB,MAAOC,aAsFca,CAAYL,KAC3C/B,EAAOoB,UAAU,EAAG,IADtB,eC5GNiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8d3f50cd.chunk.js","sourcesContent":["export const PHRASES = [\n\t\"Where's the peck of pickled peppers Peter Piper picked?\",\n\t\"I scream, you scream, we all scream for ice cream!\",\n\t\"Elizabeth's birthday is on the third Thursday of this month.\",\n\t\"I saw a kitten eating chicken in the kitchen.\",\n\t\"She sells seashells by the seashore.\",\n\t\"Four fine fresh fish for you.\",\n\t\"If a dog chews shoes, whose shoes does he choose?\",\n\t\"The sixth sick sheik's sixth sheep's sick.\",\n\t\"If two witches would watch two watches, which witch would watch which watch?\",\n];\n","import React, { useState, FormEvent, useRef } from \"react\";\nimport { PHRASES } from \"./snippets\";\nimport { Game } from \"./types\";\nimport \"./App.css\";\n\nexport const App = () => {\n\tconst [game, setGame] = useState<Game>({\n\t\tuserText: \"\",\n\t\tphrase: \"\",\n\t\twrongText: false,\n\t\tvictory: false,\n\t\tstartTime: null,\n\t\tendTime: null,\n\t});\n\n\tconst inputRef = useRef<HTMLInputElement>(null);\n\n\tconst setFocus = (inputRef: any) => {\n\t\treturn inputRef.current && inputRef.current.focus();\n\t};\n\n\tconst handleClick = (idx: number) => {\n\t\tsetFocus(inputRef);\n\t\tsetGame({\n\t\t\t...game,\n\t\t\tphrase: PHRASES[idx],\n\t\t\tstartTime: new Date().getTime(),\n\t\t});\n\t};\n\n\tconst handleChange = (evt: FormEvent<HTMLInputElement>) => {\n\t\tlet inputValue = evt.currentTarget.value;\n\t\tsetGame({\n\t\t\t...game,\n\t\t\tuserText: inputValue,\n\t\t});\n\n\t\tif (inputValue !== game.phrase.substring(0, inputValue.length)) {\n\t\t\tsetGame({\n\t\t\t\t...game,\n\t\t\t\twrongText: true,\n\t\t\t\tuserText: inputValue,\n\t\t\t});\n\t\t} else {\n\t\t\tsetGame({\n\t\t\t\t...game,\n\t\t\t\twrongText: false,\n\t\t\t\tuserText: inputValue,\n\t\t\t});\n\t\t}\n\n\t\tif (inputValue === game.phrase) {\n\t\t\tsetGame({\n\t\t\t\t...game,\n\t\t\t\twrongText: false,\n\t\t\t\tvictory: true,\n\t\t\t\tendTime: new Date().getTime() - game.startTime!,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst noPaste = (evt: FormEvent) => {\n\t\tevt.preventDefault();\n\t};\n\n\tconst noCtrlZ = (evt: any) => {\n\t\tif (evt.keyCode === 90) evt.preventDefault();\n\t};\n\n\tconst restart = () => {\n\t\tsetGame({\n\t\t\tuserText: \"\",\n\t\t\tphrase: \"\",\n\t\t\twrongText: false,\n\t\t\tvictory: false,\n\t\t\tstartTime: null,\n\t\t\tendTime: null,\n\t\t});\n\t};\n\n\tlet color = game.wrongText ? \"red\" : \"black\";\n\tif (game.victory) {\n\t\tcolor = \"green\";\n\t}\n\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"game\">\n\t\t\t\t<h1>Typing Race Game</h1>\n\t\t\t\t<button onClick={restart} className=\"restart\">\n\t\t\t\t\tRestart\n\t\t\t\t</button>\n\t\t\t\t<h3>Your Phrase:</h3>\n\t\t\t\t{game.victory ? (\n\t\t\t\t\t<h4 style={{ color: \"red\", fontWeight: \"bold\" }}>\n\t\t\t\t\t\tYay! You finished in {game.endTime}ms!\n\t\t\t\t\t</h4>\n\t\t\t\t) : (\n\t\t\t\t\t<h4>{game.phrase}</h4>\n\t\t\t\t)}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonPaste={noPaste}\n\t\t\t\t\tonKeyDown={noCtrlZ}\n\t\t\t\t\tvalue={game.userText}\n\t\t\t\t\tplaceholder=\"Write here\"\n\t\t\t\t\tstyle={{ color: color }}\n\t\t\t\t\tref={inputRef}\n\t\t\t\t/>\n\t\t\t\t<div className=\"btns\">\n\t\t\t\t\t{PHRASES.map((phrase, idx) => (\n\t\t\t\t\t\t<button key={idx} onClick={() => handleClick(idx)}>\n\t\t\t\t\t\t\t{phrase.substring(0, 20)}...\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}